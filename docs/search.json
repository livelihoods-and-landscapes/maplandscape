[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Duncan. Maintainer, author. Kevin Davies. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Duncan J, Davies K (2022). maplandscape: Shiny application explore visualise GeoPackage data. R package version 0.1.0, https://github.com/livelihoods--landscapes/maplandscape.","code":"@Manual{,   title = {maplandscape: Shiny application to explore and visualise GeoPackage data},   author = {John Duncan and Kevin Davies},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/livelihoods-and-landscapes/maplandscape}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Shiny application to explore and visualise GeoPackage data","text":"package provides functions building Shiny dashboard applications explore visualise spatial layers GeoPackages. particular, focuses providing browser-based tools analysing data stored GeoPackages QFieldCloud. pre-built Shiny application provided package uses functions provides tools : Syncing data stored multiple GeoPackages. Exploring GeoPackage layers interactive tables, web maps, charts. Customising styling charts web maps. Combining layers using spatial non-spatial joins. Generating summary tables group-summarise operations. Generating new layers add new columns existing layers. Authenticated access GeoPackages stored QFieldCloud Google Cloud Storage. package developed part Livelihoods Landscapes project developing tools approaches map diverse agricultural landscapes. initial motivation developing package Shiny application provide analysts tools analyse visualise geospatial data collected --field using QField mobile GIS application.","code":""},{"path":[]},{"path":"/index.html","id":"local-r-package","dir":"","previous_headings":"Setup","what":"Local R Package","title":"Shiny application to explore and visualise GeoPackage data","text":"Install R package: Build customise Shiny application using functions provided maplandscape launch pre-built application: build package use tools provided devtools package: launch pre-built Shiny application explore data GeoPackages inst/app sub-directory package.","code":"install.packages(\"devtools\") devtools::install_github(\"livelihoods-and-landscapes/maplandscape\") dir <- system.file(\"app\", package = \"maplandscape\") setwd(dir) library(maplandscape) shiny::shinyAppDir(\".\") # get package dependencies renv::restore()  # check package devtools::check()  # update NAMESPACE file for exports devtools::document()   # build docs pkgdown::build_site()"},{"path":"/index.html","id":"shinyappsio","dir":"","previous_headings":"Setup","what":"shinyapps.io","title":"Shiny application to explore and visualise GeoPackage data","text":"RStudio offers free-tier hosting service Shiny apps. Sign shinyapps.io. Follow commands launch maplandscape (custom Shiny application). top-right application window see Publish button, click button follow prompts deploy application shinyapps.io.  RStudio provide detailed tutorial deploying apps shinyapps.io .","code":""},{"path":"/index.html","id":"docker-and-host-in-the-cloud","dir":"","previous_headings":"Setup","what":"Docker and host in the cloud","title":"Shiny application to explore and visualise GeoPackage data","text":"requires installing git docker. Clone maplandscape GitHub repo:","code":"git clone https://github.com/livelihoods-and-landscapes/maplandscape.git  cd maplandscape"},{"path":"/index.html","id":"docker-and-shiny-server","dir":"","previous_headings":"Setup > Docker and host in the cloud","what":"Docker and Shiny Server","title":"Shiny application to explore and visualise GeoPackage data","text":"sub-directory named docker-shiny-server. contains Dockerfile lists instructions used build docker image. image based rocker/shiny:latest image includes Shiny Server host maplandscape Shiny application. Shiny Server serves apps srv/shiny-server/ directory; building docker image install R packages required run maplandscape, install maplandscape package github, copy app.R script srv/shiny-server/app contains commands launch maplandscape. customised shiny-customised.config file used set app_dir app directory Shiny Server launch serve app . Launch docker container: can find information Shiny Server , GitHub repo, following tutorial. Please see vignette Deploy: Google Cloud tutorial demonstrating deploy containerised Shiny application Google Cloud Run.","code":"cd /inst/docker-shiny-server  docker build -t maplandscape -f ShinyServer.Dockerfile . docker run -p 3838:3838 maplandscape"},{"path":"/index.html","id":"docker","dir":"","previous_headings":"Setup > Docker and host in the cloud","what":"Docker","title":"Shiny application to explore and visualise GeoPackage data","text":"deploy containerised Shiny application without Shiny Server (e.g. deploying using Shiny Proxy) use Dockerfile /inst/ directory. Dockerfile based generic maplandscape-base image pre-built top Ubuntu 20.04 LTS rocker r-ver 4.1.2 image. contains system libraries main R package dependencies used build maplandscape. run:","code":"docker build -t maplandscape . docker run -p 3838:3838 maplandscape"},{"path":"/reference/add_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Add column to a (spatial) data frame — add_column","title":"Add column to a (spatial) data frame — add_column","text":"Add column (spatial - sf) data frame using dplyr's mutate function. values new column computed applying operations values existing columns. example, new_column = old_column > 30 create new column new_column type LOGICAL values TRUE old_column greater 30.","code":""},{"path":"/reference/add_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add column to a (spatial) data frame — add_column","text":"","code":"add_column(mutate_df, mutate_conditions, col_name)"},{"path":"/reference/add_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add column to a (spatial) data frame — add_column","text":"mutate_df (spatial - sf) data frame add column using dplyr's mutate function. mutate_conditions single element character vector operations used compute values new column based values existing columns mutate_df. col_name name new column add mutate_df.","code":""},{"path":"/reference/add_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add column to a (spatial) data frame — add_column","text":"appends new column mutate_df.","code":""},{"path":"/reference/add_layers_leaflet.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a layer to a Leaflet web map — add_layers_leaflet","title":"Add a layer to a Leaflet web map — add_layers_leaflet","text":"add_layers_leaflet adds spatial layer (class sf) leaflet web map. sf data frames POINT, LINESTRING, MULTILINESTRING, POLYGON, MULITPOLYGON geometries can added web map.","code":""},{"path":"/reference/add_layers_leaflet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a layer to a Leaflet web map — add_layers_leaflet","text":"","code":"add_layers_leaflet(   map_object,   map_active_df,   map_var,   map_colour,   opacity,   map_line_width,   map_line_colour,   waiter )"},{"path":"/reference/add_layers_leaflet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a layer to a Leaflet web map — add_layers_leaflet","text":"map_object single-element character vector ID leaflet map object. map_active_df spatial data frame (class sf) features draw leaflet map. map_var column map_active_df data values map fill / marker colours drawing features. map_colour fill colour palette - RColorBrewer palettes \"YlOrRd\". opacity feature opacity - numeric value 0 1. map_line_width stroke width line polygon features. map_line_colour stroke colour line polygon features. waiter waiter object display map rendering.","code":""},{"path":"/reference/add_layers_leaflet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a layer to a Leaflet web map — add_layers_leaflet","text":"leaflet proxy object.","code":""},{"path":"/reference/add_layers_leaflet_no_zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Add layer to a Leaflet web map - no zoom — add_layers_leaflet_no_zoom","title":"Add layer to a Leaflet web map - no zoom — add_layers_leaflet_no_zoom","text":"add_layers_leaflet adds spatial layer (class sf) leaflet web map. sf data frames POINT, LINESTRING, MULTILINESTRING, POLYGON, MULITPOLYGON geometries can added web map.","code":""},{"path":"/reference/add_layers_leaflet_no_zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add layer to a Leaflet web map - no zoom — add_layers_leaflet_no_zoom","text":"","code":"add_layers_leaflet_no_zoom(   map_object,   map_active_df,   map_var,   map_colour,   opacity,   map_line_width,   map_line_colour,   waiter )"},{"path":"/reference/add_layers_leaflet_no_zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add layer to a Leaflet web map - no zoom — add_layers_leaflet_no_zoom","text":"map_object single-element character vector ID leaflet map object. map_active_df spatial data frame (class sf) features draw leaflet map. map_var column map_active_df data values map fill / marker colours drawing features. map_colour fill colour palette - RColorBrewer palettes \"YlOrRd\". opacity feature opacity - numeric value 0 1. map_line_width stroke width line polygon features. map_line_colour stroke colour line polygon features. waiter waiter object display map rendering.","code":""},{"path":"/reference/add_layers_leaflet_no_zoom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add layer to a Leaflet web map - no zoom — add_layers_leaflet_no_zoom","text":"leaflet proxy object.","code":""},{"path":"/reference/add_layers_leaflet_no_zoom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add layer to a Leaflet web map - no zoom — add_layers_leaflet_no_zoom","text":"Calling function change zoom extent Leaflet map fit contents drawn map. Used keeping zoom extent updating colour, opacity, styling options.","code":""},{"path":"/reference/add_popups.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a popup label when a feature is clicked on a Leaflet web map — add_popups","title":"Add a popup label when a feature is clicked on a Leaflet web map — add_popups","text":"add_popups creates popup label containing values selected columns feature selected -click event leaflet web map.","code":""},{"path":"/reference/add_popups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a popup label when a feature is clicked on a Leaflet web map — add_popups","text":"","code":"add_popups(in_df, layer_id, label_vars)"},{"path":"/reference/add_popups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a popup label when a feature is clicked on a Leaflet web map — add_popups","text":"in_df sf data frame object displayed leaflet web map. layer_id layerId feature selected / clicked user. label_vars column(s) in_df selected displayed popup.","code":""},{"path":"/reference/add_popups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a popup label when a feature is clicked on a Leaflet web map — add_popups","text":"html popup label displayed Leaflet web map.","code":""},{"path":"/reference/edit_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Edits layers in a GeoPackage — edit_data_frame","title":"Edits layers in a GeoPackage — edit_data_frame","text":"edit_data_frame applies edits user made data rendered DataTables object web browser underlying (sf) data frame server.","code":""},{"path":"/reference/edit_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edits layers in a GeoPackage — edit_data_frame","text":"","code":"edit_data_frame(tmp_edits, df_to_edit, df_to_edit_not_sf, layer)"},{"path":"/reference/edit_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edits layers in a GeoPackage — edit_data_frame","text":"tmp_edits data frame storing edits user made values DataTables object UI. df_to_edit Data frame spatial data frame (sf) representing layer GeoPackage rendered DataTables object user edits applied . df_to_edit_not_sf Data frame representing layer GeoPackage (.e. df_to_edit) sf geometry object dropped (can done using st_drop_geometry). layer single element character vector name layer GeoPackage edits applied .","code":""},{"path":"/reference/edit_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edits layers in a GeoPackage — edit_data_frame","text":"two-element list. first element data frame edits  applied . second element log recording status attempts  apply user edits underlying data frame object.","code":""},{"path":"/reference/edit_data_frame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Edits layers in a GeoPackage — edit_data_frame","text":"function designed used Shiny applications support interactive cleaning attribute data GeoPackages.","code":""},{"path":"/reference/filter_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditionally filter rows from a (spatial) data frame — filter_rows","title":"Conditionally filter rows from a (spatial) data frame — filter_rows","text":"Designed used within Shiny applications. Allows user specify conditions (using R dplyr syntax) filter rows data frame spatial (sf) data frame. function uses dplyr's filter conditionally subset rows.","code":""},{"path":"/reference/filter_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditionally filter rows from a (spatial) data frame — filter_rows","text":"","code":"filter_rows(filter_df, filter_conditions)"},{"path":"/reference/filter_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditionally filter rows from a (spatial) data frame — filter_rows","text":"filter_df data frame spatial (sf) data frame apply condition filter rows . filter_conditions single element character vector specifying conditions used subset rows filter_df. Conditions specified R dplyr syntax (e.g. column_1 == \"xyz\" filter rows filter_df column_1 value \"xyz\").","code":""},{"path":"/reference/filter_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditionally filter rows from a (spatial) data frame — filter_rows","text":"data frame spatial (sf) data frame containing records   filtered filter_df.","code":""},{"path":"/reference/filter_rows.html","id":"example-filter-conditions","dir":"Reference","previous_headings":"","what":"Example filter conditions","title":"Conditionally filter rows from a (spatial) data frame — filter_rows","text":"following example operations can used test conditions   filter rows data frame: * ==, >, >=, * &, |, !, * .na() See filter information examples filtering   rows data frame.","code":""},{"path":"/reference/get_gcs_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GeoPackages from a Google Cloud Storage bucket — get_gcs_object","title":"Get GeoPackages from a Google Cloud Storage bucket — get_gcs_object","text":"Makes request user specified Google Cloud Storage bucket get object (GeoPackage) bucket.","code":""},{"path":"/reference/get_gcs_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GeoPackages from a Google Cloud Storage bucket — get_gcs_object","text":"","code":"get_gcs_object(token, bucket, object)"},{"path":"/reference/get_gcs_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GeoPackages from a Google Cloud Storage bucket — get_gcs_object","text":"token OAuth2.0 token allows user make authenticated HTTP requests Google Cloud Storage API. bucket single element character vector name Google Cloud Storage bucket. object single element character vector name GeoPackage get.","code":""},{"path":"/reference/get_gcs_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GeoPackages from a Google Cloud Storage bucket — get_gcs_object","text":"two element list. First element path GeoPackage   written character vector error message. second   element file name display users selecting GeoPackage.","code":""},{"path":"/reference/get_qfieldcloud_gpkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get QFieldCloud selected GeoPackage in project — get_qfieldcloud_gpkg","title":"Get QFieldCloud selected GeoPackage in project — get_qfieldcloud_gpkg","text":"Get QFieldCloud selected GeoPackage project","code":""},{"path":"/reference/get_qfieldcloud_gpkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get QFieldCloud selected GeoPackage in project — get_qfieldcloud_gpkg","text":"","code":"get_qfieldcloud_gpkg(token, endpoint, project_id, filename)"},{"path":"/reference/get_qfieldcloud_gpkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get QFieldCloud selected GeoPackage in project — get_qfieldcloud_gpkg","text":"token session token endpoint QFieldCloud app url (omit https:// trailing /) project_id project id corresponding project download file filename name GeoPacakge download","code":""},{"path":"/reference/get_qfieldcloud_gpkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get QFieldCloud selected GeoPackage in project — get_qfieldcloud_gpkg","text":"list path downloaded GeoPackage filename","code":""},{"path":"/reference/get_qfieldcloud_projects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get QFieldCloud projects — get_qfieldcloud_projects","title":"Get QFieldCloud projects — get_qfieldcloud_projects","text":"Get QFieldCloud projects","code":""},{"path":"/reference/get_qfieldcloud_projects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get QFieldCloud projects — get_qfieldcloud_projects","text":"","code":"get_qfieldcloud_projects(token, endpoint)"},{"path":"/reference/get_qfieldcloud_projects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get QFieldCloud projects — get_qfieldcloud_projects","text":"token session token endpoint QFieldCloud app url (omit https:// trailing /)","code":""},{"path":"/reference/get_qfieldcloud_projects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get QFieldCloud projects — get_qfieldcloud_projects","text":"data.frame two columns storing project names project ids","code":""},{"path":"/reference/group_by_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by and summarise — group_by_summarise","title":"Group by and summarise — group_by_summarise","text":"Perform group summarise operations selected grouping columns compute summary statistics within group. function uses dplyr's group_by function creating groups within data frame summarise computing summary statistics.","code":""},{"path":"/reference/group_by_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by and summarise — group_by_summarise","text":"","code":"group_by_summarise(in_df, group_var, summ_var)"},{"path":"/reference/group_by_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by and summarise — group_by_summarise","text":"in_df layer (spatial (sf) non-spatial data frame) summarise. group_var character vector column names group - uses dplyr's group_by function. summ_var character vector columns names compute grouped summary statistics - uses dplyr's summarise. numeric columns mean sum computed. numeric non-numeric columns count observations within group returned.","code":""},{"path":"/reference/group_by_summarise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group by and summarise — group_by_summarise","text":"summary table data frame (s_df) object.","code":""},{"path":"/reference/join_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Join two layers — join_tables","title":"Join two layers — join_tables","text":"Perform inner join left join operation two layers based n number primary foreign keys. Perform joins using  dplyr's inner_join left_join functions.","code":""},{"path":"/reference/join_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join two layers — join_tables","text":"","code":"join_tables(f_left, f_right, j_type, pk, fk)"},{"path":"/reference/join_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join two layers — join_tables","text":"f_left layer primary keys left table joins. f_right layer foreign keys right table joins. non-spatial joins must non-spatial data frame - spatial data frame (.e. class sf) converted non-spatial. j_type string specifying type join perform. \"col_inner\" specifies inner join \"col_left\" specifies left join. pk character vector primary keys. primary foreign keys need names order keys matters. fk character vector foreign keys. primary foreign keys need names order keys matters.","code":""},{"path":"/reference/join_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join two layers — join_tables","text":"j_df layer joined primary foreign keys.   class sf(.e. spatial features) f_left spatial class sf. Otherwise returns data frame.","code":""},{"path":"/reference/join_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join two layers — join_tables","text":"Primary foreign keys converted character vectors joining.","code":""},{"path":"/reference/list_gcs_bucket_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"List GeoPackages in Google Cloud Storage bucket — list_gcs_bucket_objects","title":"List GeoPackages in Google Cloud Storage bucket — list_gcs_bucket_objects","text":"Makes request user specified Google Cloud Storage bucket list objects bucket. Filters response return list GeoPackages (). function uses httr package making authenticated HTTP requests processing responses.","code":""},{"path":"/reference/list_gcs_bucket_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List GeoPackages in Google Cloud Storage bucket — list_gcs_bucket_objects","text":"","code":"list_gcs_bucket_objects(token, bucket)"},{"path":"/reference/list_gcs_bucket_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List GeoPackages in Google Cloud Storage bucket — list_gcs_bucket_objects","text":"token httr OAuth2.0 token allows user make authenticated HTTP requests Google Cloud Storage API. bucket name Google Cloud Storage bucket list objects .","code":""},{"path":"/reference/list_gcs_bucket_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List GeoPackages in Google Cloud Storage bucket — list_gcs_bucket_objects","text":"items - character vector names GeoPacakges Google   Cloud Storage bucket.","code":""},{"path":"/reference/list_gcs_buckets.html","id":null,"dir":"Reference","previous_headings":"","what":"List Google Cloud Storage buckets — list_gcs_buckets","title":"List Google Cloud Storage buckets — list_gcs_buckets","text":"Makes request user specified Google Cloud project list storage buckets","code":""},{"path":"/reference/list_gcs_buckets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Google Cloud Storage buckets — list_gcs_buckets","text":"","code":"list_gcs_buckets(token, project_id)"},{"path":"/reference/list_gcs_buckets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Google Cloud Storage buckets — list_gcs_buckets","text":"token httr OAuth2.0 token allows user make authenticated HTTP requests Google Cloud Storage API. project_id single element character vector Google Cloud project id.","code":""},{"path":"/reference/list_gcs_buckets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Google Cloud Storage buckets — list_gcs_buckets","text":"vector bucket names.","code":""},{"path":"/reference/list_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Return layers from uploaded data — list_layers","title":"Return layers from uploaded data — list_layers","text":"list_layers returns name path layers data uploaded application tibble (data frame like object). GeoPackage uploaded contains one layer, layer path layer recorded separate row returned tibble.","code":""},{"path":"/reference/list_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return layers from uploaded data — list_layers","text":"","code":"list_layers(f_path, f_name)"},{"path":"/reference/list_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return layers from uploaded data — list_layers","text":"f_path character vector file paths GeoPackage(s) uploaded user. f_name character vector file names GeoPackage(s) uploaded user.","code":""},{"path":"/reference/list_layers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return layers from uploaded data — list_layers","text":"tibble three columns: layers - layer name;   layer_disp_name - clean informative layer name select   input; file_path - temporary file path data; file_type - file type.","code":""},{"path":"/reference/list_qfieldcloud_gpkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get QFieldCloud files in project (GeoPackages only) — list_qfieldcloud_gpkg","title":"Get QFieldCloud files in project (GeoPackages only) — list_qfieldcloud_gpkg","text":"Get QFieldCloud files project (GeoPackages )","code":""},{"path":"/reference/list_qfieldcloud_gpkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get QFieldCloud files in project (GeoPackages only) — list_qfieldcloud_gpkg","text":"","code":"list_qfieldcloud_gpkg(token, endpoint, project_id)"},{"path":"/reference/list_qfieldcloud_gpkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get QFieldCloud files in project (GeoPackages only) — list_qfieldcloud_gpkg","text":"token session token endpoint QFieldCloud app url (omit https:// trailing /) project_id project id corresponding project download file ","code":""},{"path":"/reference/list_qfieldcloud_gpkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get QFieldCloud files in project (GeoPackages only) — list_qfieldcloud_gpkg","text":"data.frame two columns storing file names project ids","code":""},{"path":"/reference/make_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot — make_barplot","title":"Barplot — make_barplot","text":"Generate style bar plot visualises summary statistics (mean, sum, count) values group. Designed used  Shiny application visualise results group_by summarise operations.","code":""},{"path":"/reference/make_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot — make_barplot","text":"","code":"make_barplot(col_chart_df, x_lab, y_lab, axis_font_size, lab_font_size)"},{"path":"/reference/make_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot — make_barplot","text":"col_chart_df two column data frame. first column specifies groupings. second column specifies summary statistic per-group. x_lab single element character vector specifying X-axis label. y_lab single element character vector specifying Y-axis label. axis_font_size numeric value specifying font size axis tick labels. lab_font_size numeric value specifying font size axis labels.","code":""},{"path":"/reference/make_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot — make_barplot","text":"ggplot object can passed renderPlot display Shiny application.","code":""},{"path":"/reference/make_barplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Barplot — make_barplot","text":"helper function pass user defined data, aesthetic mappings, chart styling parameters ggplot within Shiny app.","code":""},{"path":"/reference/make_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram — make_histogram","title":"Histogram — make_histogram","text":"Generate style histogram column (spatial - sf) data frame. Designed used Shiny application visualise distribution continuous variables layers GeoPackage.","code":""},{"path":"/reference/make_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram — make_histogram","text":"","code":"make_histogram(   chart_active_df,   hist_x_var,   binwidth,   x_lab,   y_lab,   axis_font_size,   lab_font_size )"},{"path":"/reference/make_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram — make_histogram","text":"chart_active_df data frame containing column whose values used generate histogram. hist_x_var single element character vector specifying name column use generate histogram. binwidth numeric value specifying width histogram's bins. x_lab single element character vector specifying X-axis label. y_lab single element character vector specifying Y-axis label. axis_font_size numeric value specifying font size axis tick labels. lab_font_size numeric value specifying font size axis labels.","code":""},{"path":"/reference/make_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram — make_histogram","text":"ggplot object can passed renderPlot display Shiny application.","code":""},{"path":"/reference/make_histogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Histogram — make_histogram","text":"helper function pass user defined data, aesthetic mappings, chart styling parameters ggplot within Shiny app.","code":""},{"path":"/reference/make_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot — make_scatter","title":"Scatter plot — make_scatter","text":"Generate style scatter plot two numeric columns (spatial - sf) data frame. Designed used Shiny application visualise bivariate relationship two variables.","code":""},{"path":"/reference/make_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot — make_scatter","text":"","code":"make_scatter(   chart_active_df,   scatter_x_var,   scatter_y_var,   point,   x_lab,   y_lab,   axis_font_size,   lab_font_size )"},{"path":"/reference/make_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot — make_scatter","text":"chart_active_df data frame containing column whose values used generate histogram. scatter_x_var single element character vector specifying name column use plot X-axis. scatter_y_var single element character vector specifying name column use plot Y-axis. point point size. x_lab single element character vector specifying X-axis label. y_lab single element character vector specifying Y-axis label. axis_font_size numeric value specifying font size axis tick labels. lab_font_size numeric value specifying font size axis labels.","code":""},{"path":"/reference/make_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter plot — make_scatter","text":"ggplot object can passed renderPlot display Shiny application.","code":""},{"path":"/reference/make_scatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatter plot — make_scatter","text":"helper function pass user defined data, aesthetic mappings, chart styling parameters ggplot within Shiny app.","code":""},{"path":"/reference/mod_get_layers_Server.html","id":null,"dir":"Reference","previous_headings":"","what":"Process user uploaded GeoPackages within a Shiny app — mod_get_layers_Server","title":"Process user uploaded GeoPackages within a Shiny app — mod_get_layers_Server","text":"Process files (GeoPackages) uploaded user. file   uploaded, call list_layers list layers GeoPacakge   temporary location GeoPackage.","code":""},{"path":"/reference/mod_get_layers_Server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process user uploaded GeoPackages within a Shiny app — mod_get_layers_Server","text":"","code":"mod_get_layers_Server(id)"},{"path":"/reference/mod_get_layers_Server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process user uploaded GeoPackages within a Shiny app — mod_get_layers_Server","text":"id inputID correspond file upload UI component.","code":""},{"path":"/reference/mod_get_layers_Server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process user uploaded GeoPackages within a Shiny app — mod_get_layers_Server","text":"field_layers tibble three columns: layers - layer name;   layer_disp_name - clean informative layer name select   input; file_path - temporary file path data; file_type - file type.","code":""},{"path":"/reference/mod_get_layers_UI.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload GeoPackages to a Shiny App — mod_get_layers_UI","title":"Upload GeoPackages to a Shiny App — mod_get_layers_UI","text":"Generate UI component file upload using Shiny's fileInput allow users upload GeoPackages Shiny app.","code":""},{"path":"/reference/mod_get_layers_UI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload GeoPackages to a Shiny App — mod_get_layers_UI","text":"","code":"mod_get_layers_UI(id, label, multiple, accept)"},{"path":"/reference/mod_get_layers_UI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload GeoPackages to a Shiny App — mod_get_layers_UI","text":"id inputID file upload UI component. label label file upload widget UI. multiple logical, whether accept multiple file uploads. accept file types accept - vector strings indicating extensions MIME type","code":""},{"path":"/reference/plant_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute plant number — plant_number","title":"Compute plant number — plant_number","text":"Compute plant number","code":""},{"path":"/reference/plant_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute plant number — plant_number","text":"","code":"plant_number(acres, plant_spacing, row_spacing)"},{"path":"/reference/plant_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute plant number — plant_number","text":"acres area crop acres. plant_spacing plant spacing plants row metres. row_spacing row spacing rows plants metres.","code":""},{"path":"/reference/plant_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute plant number — plant_number","text":"number plants field.","code":""},{"path":"/reference/qfieldcloud_login.html","id":null,"dir":"Reference","previous_headings":"","what":"QFieldCloud login — qfieldcloud_login","title":"QFieldCloud login — qfieldcloud_login","text":"QFieldCloud login","code":""},{"path":"/reference/qfieldcloud_login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QFieldCloud login — qfieldcloud_login","text":"","code":"qfieldcloud_login(username, password, endpoint)"},{"path":"/reference/qfieldcloud_login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QFieldCloud login — qfieldcloud_login","text":"username QFieldCloud email password QFieldCloud password endpoint QFieldCloud app url (omit https:// trailing /)","code":""},{"path":"/reference/qfieldcloud_login.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QFieldCloud login — qfieldcloud_login","text":"session token","code":""},{"path":"/reference/read_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Read tabular data - either spatial layer (i.e. a table in a GeoPackage) or csv file. — read_tables","title":"Read tabular data - either spatial layer (i.e. a table in a GeoPackage) or csv file. — read_tables","text":"Read tabular data - either spatial layer (.e. table GeoPackage) csv file.","code":""},{"path":"/reference/read_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read tabular data - either spatial layer (i.e. a table in a GeoPackage) or csv file. — read_tables","text":"","code":"read_tables(uploads, lyr)"},{"path":"/reference/read_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read tabular data - either spatial layer (i.e. a table in a GeoPackage) or csv file. — read_tables","text":"uploads Data frame generated list_layers indicating names, file types, paths uploaded layers. lyr User selected layer - used selecting relevant layer GeoPackage many layers.","code":""},{"path":"/reference/read_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read tabular data - either spatial layer (i.e. a table in a GeoPackage) or csv file. — read_tables","text":"(spatial) data frame selected layer.","code":""},{"path":"/reference/shannon_h_div.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Shannon's H diversity index — shannon_h_div","title":"Compute Shannon's H diversity index — shannon_h_div","text":"Shannon's H diversity index measure richness (abundance) evenness (balance proportional abundance element). Thus, use example mixed cropping field. field diverse crops grown equal area allocated crop.","code":""},{"path":"/reference/shannon_h_div.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Shannon's H diversity index — shannon_h_div","text":"","code":"shannon_h_div(...)"},{"path":"/reference/shannon_h_div.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Shannon's H diversity index — shannon_h_div","text":"... Two numeric vectors containing proportion species. element (row) vector corresponds geographic unit group Shannon's H calculated .","code":""},{"path":"/reference/shannon_h_div.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Shannon's H diversity index — shannon_h_div","text":"Shannon's H diversity score unit; returned numeric   vector.","code":""},{"path":"/reference/shannon_h_div.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Shannon's H diversity index — shannon_h_div","text":"function takes series numeric vectors arguments. vector represents proportion species within geographic unit group. function check input vectors numeric. also rescale row wise elements sum one. species zero proportion allocated small proportion (0.00001) enable Shannon's H computed.","code":""},{"path":"/reference/spatial_join_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial join of two layers — spatial_join_tables","title":"Spatial join of two layers — spatial_join_tables","text":"Perform spatial inner join left join operation two layers based largest intersection spatial features. Spatial joins performed using sf's st_join.","code":""},{"path":"/reference/spatial_join_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial join of two layers — spatial_join_tables","text":"","code":"spatial_join_tables(f_left, f_right, j_type)"},{"path":"/reference/spatial_join_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial join of two layers — spatial_join_tables","text":"f_left left table spatial joins - spatial (sf) data frame. f_right Right table spatial joins - spatial (sf) data frame. j_type character specifying type join perform. Options spatial joins include inner left joins.","code":""},{"path":"/reference/spatial_join_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial join of two layers — spatial_join_tables","text":"j_df layer class - spatial   (sf) data frame (.e.   spatial features attribute columns) returned spatial join.","code":""},{"path":"/reference/spatial_join_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial join of two layers — spatial_join_tables","text":"Geometries spatial tables checked validity (using sf's st_is_valid) empty (using sf's st_is_empty). Invalid geometries dropped performing spatial joins.","code":""},{"path":"/reference/sync_forms.html","id":null,"dir":"Reference","previous_headings":"","what":"Sync data collected using QField mobile GIS — sync_forms","title":"Sync data collected using QField mobile GIS — sync_forms","text":"sync_forms syncs layers stored GeoPackages template GeoPackage database initial \"clean\" QGS project GeoPackage.","code":""},{"path":"/reference/sync_forms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sync data collected using QField mobile GIS — sync_forms","text":"","code":"sync_forms(template, forms)"},{"path":"/reference/sync_forms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sync data collected using QField mobile GIS — sync_forms","text":"template data frame format returned shiny's fileInput. data frame stores path single GeoPackage can either central database data collected field synced \"clean\" empty GeoPackage layers uploaded forms. forms data frame format returned shiny's fileInput.","code":""},{"path":"/reference/sync_forms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sync data collected using QField mobile GIS — sync_forms","text":"four element list out_gpkg, first element path   temporary GeoPackage storing data forms synced    template. second element date-time call sync_forms - used naming downloads synced data.   third element data frame format returned   shiny's fileInput listing layers returned syncing forms template. fourth element path   log file.","code":""},{"path":"/reference/write_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a layer to a GeoPackage file — write_tables","title":"Write a layer to a GeoPackage file — write_tables","text":"Write (spatial - sf) data frame layer GeoPackage.","code":""},{"path":"/reference/write_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a layer to a GeoPackage file — write_tables","text":"","code":"write_tables(df, gpkg_dir, lyr)"},{"path":"/reference/write_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a layer to a GeoPackage file — write_tables","text":"df Data frame spatial data frame (sf) write GeoPackage. gpkg_dir Data frame generated list_layers indicating names, file types, paths files uploaded tables. lyr User selected layer - used selecting relevant layer GeoPackage many tables.","code":""},{"path":"/reference/write_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a layer to a GeoPackage file — write_tables","text":"Designed used Shiny apps GeoPackage temporary directory within app instance.","code":""}]
